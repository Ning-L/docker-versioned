name: Build & Push UMR

on:
  workflow_run:
    workflows: 
      - "Build & Push Core"
      - "Create Pre-Release"
    branches: main
    types: completed
  workflow_dispatch:

jobs:
  build_umr:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker images
        run: |
          CONTENT=fromJson($(jq -r 'tostring' 05-matrix/github_action_matrix_all_umr.json))
          BAKE_JSON=04-bakefiles/${{ CONTENT.r_version }}.docker-bake.json
          for itarget in $(jq '.group[].${{ CONTENT.group }}[].targets[]' -r ${BAKE_JSON}); do docker buildx bake --file ${BAKE_JSON} --set=*.labels.org.opencontainers.image.revision=${GITHUB_SHA} --push ${itarget}; done
  build_server:
    needs: build_umr
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker images
        run: |
          CONTENT=fromJson($(jq -r 'tostring' 05-matrix/github_action_matrix_all_server.json))
          BAKE_JSON=04-bakefiles/${{ CONTENT.r_version }}.docker-bake.json
          for itarget in $(jq '.group[].${{ CONTENT.group }}[].targets[]' -r ${BAKE_JSON}); do docker buildx bake --file ${BAKE_JSON} --set=*.labels.org.opencontainers.image.revision=${GITHUB_SHA} --push ${itarget}; done
